@model StudentEnrollmentWebApp.Models.Student

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Student</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="FullName" class="control-label"></label>
                <input asp-for="FullName" class="form-control" />
                <span asp-validation-for="FullName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" placeholder="example@example.com" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label">PhoneNumber (PH)</label>
                <input asp-for="PhoneNumber" class="form-control" type="tel" placeholder="+639xxxxxxxxx/09xxxxxxxxx/9xxxxxxxxx" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Gender</label><br />
                <div class="form-check">
                    @Html.RadioButtonFor(model => model.Gender, "Male", new { @checked = "true", @class = "form-check-input", @id = "edit-male"})
                    <label for="edit-male" class="control-label">Male</label><br />
                    @Html.RadioButtonFor(model => model.Gender, "Female", new { @checked = "true", @class = "form-check-input", @id = "edit-female"})
                    <label for="edit-female" class="control-label">Female</label><br />
                    @Html.RadioButtonFor(model => model.Gender, "Other", new { @checked = "true", @class = "form-check-input", @id = "edit-other"})
                    <label for="edit-other" class="control-label">Other</label>
                </div>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"></label>
                <input asp-for="DateOfBirth" class="form-control" />
                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Course" class="control-label"></label>
                <input asp-for="Course" class="form-control" />
                <span asp-validation-for="Course" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Semester" class="control-label"></label>
                <select asp-for="Semester" class="form-select">
                    @{
                        string[] semesters = new string[] { "1st Semester", "2nd Semester", "Summer Semester" };
                        Dictionary<string, string> semesterOptions = new Dictionary<string, string>();

                        foreach (string sem in semesters)
                        {
                            string selectedSem = (Model.Semester == sem) ? "selected" : "";
                            semesterOptions.Add(sem, selectedSem);
                        }

                        foreach (var item in semesterOptions)
                        {
                            <!option value="@item.Key" @item.Value>@item.Key</!option>
                        }
                    }
                </select>
                <span asp-validation-for="Semester" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="YearLevel" class="control-label"></label>
                <select asp-for="YearLevel" class="form-select">
                    @{
                        string[] yearLevels = new string[] { "1st Year", "2nd Year", "3rd Year", "4th Year", "5th Year" };
                        Dictionary<string, string> yearLevelOptions = new Dictionary<string, string>();

                        foreach (string yearLevel in yearLevels)
                        {
                            string selectedYear = (Model.YearLevel == yearLevel) ? "selected" : "";
                            yearLevelOptions.Add(yearLevel, selectedYear);
                        }

                        foreach (var item in yearLevelOptions)
                        {
                            <!option value="@item.Key" @item.Value>@item.Key</!option>
                        }
                    }
                </select>
                <span asp-validation-for="Semester" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Section" class="control-label"></label>
                <input asp-for="Section" class="form-control" />
                <span asp-validation-for="Section" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Subjects" class="control-label"></label>
                <div id="edit-inputContainer">
                    @foreach (var subject in Model.Subjects.Split(','))
                    {
                        <input type="text" class="subject-input form-control mt-1" value="@subject" />
                    }
                </div>
                <input id="edit-concatSubjects" type="hidden" asp-for="Subjects" />
                <span asp-validation-for="Subjects" class="text-danger"></span>
                <div id="subject-buttons">
                    <button type="button" id="edit-addInputBtn" class="btn btn-success mt-2">
                        <i class="bi bi-plus-square"></i>
                    </button>
                    <button type="button" id="edit-removeInputBtn" class="btn btn-danger mt-2 ">
                        <i class="bi bi-dash-square"></i>
                    </button>
                </div>
            </div>
            <div class="form-group mt-3">
                <input type="submit" value="Save" class="btn btn-primary" /> 
                <a asp-action="Index" class="btn btn-outline-primary m-lg-1 m-md-1 m-sm-1">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            $("#edit-addInputBtn").click(function () {
                $("#edit-inputContainer").append('<input type="text" class="subject-input form-control mt-1" />');
            });

            $("#edit-removeInputBtn").click(function () {
                $("#inputContainer input:last").remove();
            });

            $("form").submit(function () {
                // On form submission, concatenate all subjects into a single string
                var subjects = $(".subject-input").map(function () {
                    return $(this).val();
                }).get().join(",");

                // Set the concatenated subjects to the hidden input field
                $("#edit-concatSubjects").val(subjects);
            });
        });
    </script>
}
